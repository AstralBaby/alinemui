@import "palette";
/*
Avoid the usage of global overrides or sx in Material-UI themes, if the user
add custom values for these props in their components, the components will loose every style.
Custom color support can be implemented using attr function and initial colors svg api
*/

.MuiButton {
    // check if its suitable to set base button text color to contrast 1.
    // evaluate if its suitable to set default button background color to bg 2
    &-root {
        @apply rounded-md capitalize border-2;
        // &:not([class*='text']) {
        //     @apply text-gray-700
        // }
    }
    // variants
    &-text {
        &:hover { @apply bg-gray-500/10 dark:bg-gray-300/10 }
        &Primary {
            //bg-primary
        }
    }
    &-icon {
        @apply p-1 rounded-full min-w-min aspect-square;
        // to be removed
    }
    &-contained, &-icon {
        @apply shadow-none dark:text-white;
        &:hover { @apply shadow-none }
        &Secondary {
            @apply bg-red-300/10
        }
        &Primary {
            @apply text-white;
            //bg-primary
            // &:hover { @apply bg-primary-accent }
        }
        // &:not([class*='bg']):not([class^='Primary']) { @apply bg-gray-200 }
    }
    &-outlined  {
        @apply border-black/10 dark:border-white/10;
        &:hover { @apply border-2 }
        //text-primary border-primary
        &Primary {
            // @apply border-current;
            //text-primary
            // &:hover { @apply text-primary }
            //to preserve the essence of the outlined button the background on hover is removed.
        }
        // &Secondary {
        //     @apply bg-red-300
        // }
    }
    // sizes
    &-sizeLarge {
        @apply px-6 rounded-lg
    }
    &-sizeSmall {
        @apply px-3;
    }
}

// remove all text utility classes and hardcoded primary colors.